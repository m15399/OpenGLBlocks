
#include "Primitives.h"
#include "SDL.h"
#include "Mesh.h"

Primitives g_primitives;


GLfloat squareVertices[] = {
	.5f, .5f, 0.f,   0, 0, 1,
	-.5f, .5f, 0.f,  0, 0, 1,
	-.5f, -.5f, 0.f, 0, 0, 1,
	.5f, -.5f, 0.f,  0, 0, 1
};

GLubyte squareColors[] = {
	0, 255, 255, 255,
	255, 0, 255, 255,
	255, 255, 0, 255,
	255, 255, 255, 255,
};

GLuint squareIndeces[] = {
	0, 1, 2,    0, 2, 3,
};

static const GLfloat cubeVertices[] = {
	.5f, .5f, .5f,   0, 0, 1,
	-.5f, .5f, .5f,  0, 0, 1,
	-.5f, -.5f, .5f, 0, 0, 1,
	.5f, -.5f, .5f,  0, 0, 1,

	.5f, .5f, .5f,   1, 0, 0,
	.5f, -.5f, .5f,  1, 0, 0,
	.5f, -.5f, -.5f, 1, 0, 0,
	.5f, .5f, -.5f,  1, 0, 0,

	-.5f, .5f, -.5f,  0, 0, -1,
	.5f, .5f, -.5f,   0, 0, -1,
	.5f, -.5f, -.5f,  0, 0, -1,
	-.5f, -.5f, -.5f, 0, 0, -1,

	-.5f, -.5f, .5f,  -1, 0, 0,
	-.5f, .5f, .5f,   -1, 0, 0,
	-.5f, .5f, -.5f,  -1, 0, 0,
	-.5f, -.5f, -.5f, -1, 0, 0,

	.5f, .5f, .5f,   0, 1, 0,
	.5f, .5f, -.5f,  0, 1, 0,
	-.5f, .5f, -.5f, 0, 1, 0,
	-.5f, .5f, .5f,  0, 1, 0,

	.5f, -.5f, .5f,   0, -1, 0,
	-.5f, -.5f, .5f,  0, -1, 0,
	-.5f, -.5f, -.5f, 0, -1, 0,
	.5f, -.5f, -.5f,  0, -1, 0,
};

static const GLubyte cubeColors[] = {
	255, 255, 0, 255,
	0, 255, 255, 255,
	255, 0, 255, 255,
	255, 0, 255, 255,

	255, 0, 255, 255,
	255, 0, 255, 255,
	255, 255, 255, 255,
	255, 255, 255, 255,
	
	255, 255, 255, 255,
	255, 255, 255, 255,
	255, 255, 0, 255,
	255, 255, 0, 255,
	
	255, 255, 255, 255,
	255, 255, 255, 255,
	255, 255, 255, 255,
	255, 255, 255, 255,

	255, 255, 255, 255,
	255, 0, 0, 255,
	255, 0, 0, 255,
	255, 255, 255, 255,

	0, 255, 255, 255,
	0, 255, 255, 255,
	255, 255, 255, 255,
	255, 255, 255, 255,
};

static const GLuint cubeIndeces[] = {
	0, 1, 2,      0, 2, 3,
	4, 5, 6,      4, 6, 7,
	8, 9, 10,     8, 10, 11,
	12, 13, 14,   12, 14, 15,
	16, 17, 18,   16, 18, 19,
	20, 21, 22,   20, 22, 23,
};


void Primitives::Init(){
	cube.Init();
	cube.Set(cubeVertices, cubeColors, 8 * 16, cubeIndeces, 12);
	// square.Init();
	// square.Set(squareVertices, squareColors, 4, squareIndeces, 2);
}


